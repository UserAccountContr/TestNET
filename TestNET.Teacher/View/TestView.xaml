<UserControl 
    x:Class="TestNET.Teacher.View.TestView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:local="clr-namespace:TestNET.Teacher.View"
	xmlns:model="clr-namespace:TestNET.Shared.Model;assembly=TestNET.Shared"
	xmlns:sharedserv="clr-namespace:TestNET.Shared.Service;assembly=TestNET.Shared"
	xmlns:viewmodel="clr-namespace:TestNET.Teacher.ViewModel" 
    xmlns:serv="clr-namespace:TestNET.Teacher.Service"
    xmlns:latex="clr-namespace:WpfMath.Controls;assembly=WpfMath"
    xmlns:CustomControls="clr-namespace:TestNET.Shared.CustomControls;assembly=TestNET.Shared"
	d:DataContext="{d:DesignInstance Type=viewmodel:TestViewModel}"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800">

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="{DynamicResource back}"
              Command="{Binding DataContext.GoToHomeViewCommand, RelativeSource={RelativeSource AncestorType=Window}}"
              IsEnabled="{Binding LogService.TestNotStarted}"/>
            <MenuItem Header="{DynamicResource start}"
              Command="{Binding ShareTestCommand}"
              IsEnabled="{Binding LogService.TestNotStarted}"/>
            <MenuItem Header="{DynamicResource stop}"
              Command="{Binding StopSharingTestCommand}"
              IsEnabled="{Binding LogService.TestStarted}"/>
            <MenuItem Header="{DynamicResource edit}"
              Command="{Binding DataContext.OpenEditTestViewCommand, RelativeSource={RelativeSource AncestorType=Window}}"
              CommandParameter="{Binding Test}"
              IsEnabled="{Binding LogService.TestNotStarted}"/>
        </Menu>

        <ScrollViewer>

            <StackPanel MaxWidth="1200">
                <WrapPanel>
                    <WrapPanel.Resources>
                        <Style TargetType="Label" BasedOn="{StaticResource LargeLabel}"/>
                        <BooleanToVisibilityConverter x:Key="bvc"/>
                    </WrapPanel.Resources>
                    <Label ContentStringFormat="{DynamicResource testNameView}"
                           Content="{Binding Test.Name}"
                           MaxWidth="500"/>
                    <Label ContentStringFormat="{DynamicResource testCodeView}"
                           Content="{Binding LogService.IPCode}"
                           Visibility="{Binding LogService.TestStarted, Converter={StaticResource bvc}}"
                           Margin="25 0 0 0"/>
                </WrapPanel>
                <Label ContentStringFormat="{DynamicResource testNumberQuestions}"
                       Content="{Binding Test.Questions.Count}"
                       Style="{StaticResource MediumLabel}"/>
                <Expander Header="{DynamicResource questions}"
                          ExpandDirection="Down"
                          IsExpanded="True">
                    <ListView ItemsSource="{Binding Test.Questions}" 
                              HorizontalContentAlignment="Stretch"
                              PreviewMouseWheel="ListView_PreviewMouseWheel"
                              ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                              BorderThickness="0">
                        <ListView.Resources>
                            <sharedserv:IndexConverter x:Key="IndexConverter" />
                            
                            <!--

                            <DataTemplate DataType="{x:Type model:ShortAnswerQuestion}">
                                <CustomControls:QuestionViewPanelSH
                                    QuestionSH="{Binding .}"
                                    ShowAnswers="False"
                                    QuestionIndex="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource IndexConverter}}"/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type model:MultipleChoiceQuestion}">
                                <CustomControls:QuestionViewPanelMC
                                    QuestionMC="{Binding .}"
                                    ShowAnswers="False"
                                    QuestionIndex="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource IndexConverter}}"/>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type model:MultipleChoiceManyQuestion}">
                                <CustomControls:QuestionViewPanelMCM
                                    QuestionMCM="{Binding .}"
                                    ShowAnswers="False"
                                    QuestionIndex="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource IndexConverter}}"/>
                            </DataTemplate>
                            -->

                        </ListView.Resources>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <CustomControls:QuestionViewPanel 
                                        Question="{Binding .}"
                                        ShowAnswers="False"
                                        QuestionIndex="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListViewItem}}, Converter={StaticResource IndexConverter}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Margin" Value="0 10"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </Expander>
                <Expander Header="{DynamicResource testSettings}"
                          ExpandDirection="Down">
                    <StackPanel>
                        <CheckBox Content="{DynamicResource testAllowReviewing}" 
                                      IsChecked="{Binding LogService.SubmissionsViewable}"/>

                        <CheckBox Content="{DynamicResource testShuffle}"
                                      IsEnabled="{Binding LogService.TestNotStarted}"
                                      IsChecked="{Binding Test.Shuffled}"/>
                    </StackPanel>
                </Expander>
                <Expander Header="{DynamicResource testSubmissions}">
                    <ListView ItemsSource="{Binding Test.Submissions}"
                              PreviewMouseWheel="ListView_PreviewMouseWheel"
                          BorderThickness="0">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Focusable" Value="False"/>
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <CustomControls:TestSubmPanel Submission="{Binding .}"
                                                              IsTeacher="True"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Expander>
                <Expander Header="{DynamicResource testLog}">
                    <TextBlock Text="{Binding LogService.TestLog}"/>
                </Expander>
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</UserControl>
