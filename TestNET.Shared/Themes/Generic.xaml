<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:TestNET.Shared.CustomControls"
    xmlns:model="clr-namespace:TestNET.Shared.Model">


    <Style TargetType="{x:Type local:QuestionPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:QuestionPanel}">
                    <ControlTemplate.Resources>
                        <Style x:Key="QuestionBorder" TargetType="Border">
                            <Setter Property="BorderBrush" Value="#FF80c0ff"/>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="CornerRadius" Value="4"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        </Style>

                        <Style x:Key="QuestionIndex" TargetType="Label">
                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Background" Value="#FF80c0ff"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Padding" Value="0"/>
                        </Style>

                        <Style x:Key="QuestionBody" TargetType="StackPanel">
                            <Setter Property="Margin" Value="15"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border Style="{StaticResource QuestionBorder}">
                        <StackPanel>
                            <Grid Background="#FFbfdFff">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>

                                <Label Content="{TemplateBinding QuestionIndex}"
                                       Style="{StaticResource QuestionIndex}"
                                       Grid.Column="0"/>

                                <Label Grid.Column="2"
                                       FontSize="16">
                                    <Label.Content>
                                        <WrapPanel>
                                            <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}, Path=DataContext.Points}"/>
                                            <TextBlock Text=" Pts."/>
                                        </WrapPanel>
                                    </Label.Content>
                                </Label>
                            </Grid>
                            <ContentControl Content="{TemplateBinding Content}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LatexLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LatexLabel}">
                    <ContentControl Content="{TemplateBinding Content}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DropdownMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DropdownMenu}">
                    <Grid>
                        <Grid.Resources>

                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Padding" Value="20 10"/>
                            </Style>
                        </Grid.Resources>
                        <CheckBox x:Name="PART_Toggle" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                            <CheckBox.Template>
                                <ControlTemplate TargetType="CheckBox">
                                    <Grid Background="Transparent">
                                        <Viewbox>
                                            <Path
                                                Data="M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                Fill="Black"
                                                Stretch="Fill" />
                                        </Viewbox>
                                    </Grid>
                                </ControlTemplate>
                            </CheckBox.Template>
                        </CheckBox>

                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            IsOpen="{TemplateBinding IsOpen}"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=PART_Toggle}"
                            StaysOpen="False">
                            <ContentControl Content="{TemplateBinding Content}"/>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type local:QuestionEditPanel}" x:Key="EditQSA">
        <local:QuestionPanel QuestionIndex="{TemplateBinding QuestionIndex}">
            <StackPanel Margin="15">
                <local:TemplateTextBox Placeholder="Question" Text="{Binding QuestionSH.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
                <local:TemplateTextBox Placeholder="Answer" Text="{Binding QuestionSH.Answer.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
                <WrapPanel>
                    <Label Content="Pts:"/>
                    <TextBox Text="{Binding QuestionSH.Points, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                             MinWidth="30"/>
                </WrapPanel>
                <CheckBox Content="Math" IsChecked="{Binding QuestionSH.TextIsMath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
            </StackPanel>
        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionEditPanel}" x:Key="EditQMC">
        <local:QuestionPanel QuestionIndex="{TemplateBinding QuestionIndex}">
            <StackPanel Margin="15">
                <local:TemplateTextBox Text="{Binding QuestionMC.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>

                <ItemsControl ItemsSource="{Binding QuestionMC.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:Answer}">
                            <WrapPanel>
                                <RadioButton GroupName="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UniqueId}"
                                             IsChecked="{Binding IsCorrect, Mode=TwoWay}" />
                                <local:TemplateTextBox Text="{Binding Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </WrapPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Button Content="+"
                        Command="{Binding QuestionMC.AddPosAnsCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
                <WrapPanel>
                    <Label Content="Pts:"/>
                    <TextBox Text="{Binding QuestionMC.Points, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                             MinWidth="30"/>
                </WrapPanel>
                <CheckBox Content="Math" IsChecked="{Binding QuestionMC.TextIsMath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
            </StackPanel>
        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionEditPanel}" x:Key="EditQMCM">
        <local:QuestionPanel QuestionIndex="{TemplateBinding QuestionIndex}">
            <StackPanel Margin="15">
                <local:TemplateTextBox Text="{Binding QuestionMCM.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>

                <ItemsControl ItemsSource="{Binding QuestionMCM.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:Answer}">
                            <WrapPanel>
                                <CheckBox IsChecked="{Binding IsCorrect, Mode=TwoWay}" />
                                <local:TemplateTextBox Text="{Binding Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </WrapPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Button Content="+"
                        Command="{Binding QuestionMCM.AddPosAnsCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
                <WrapPanel>
                    <Label Content="Pts:"/>
                    <TextBox Text="{Binding QuestionMCM.Points, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                             MinWidth="30"/>
                </WrapPanel>
                <CheckBox Content="Math" IsChecked="{Binding QuestionMCM.TextIsMath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
            </StackPanel>
        </local:QuestionPanel>
    </ControlTemplate>

    <Style TargetType="{x:Type local:QuestionEditPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:QuestionEditPanel}">
                    <local:QuestionViewPanel 
                        Question="{TemplateBinding Question}"
                        QuestionIndex="{TemplateBinding QuestionIndex}"
                        EnableSolving="False"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInEditMode, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="SH"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource EditQSA}"/>
            </MultiDataTrigger>


            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInEditMode, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MC"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource EditQMC}"/>
            </MultiDataTrigger>


            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInEditMode, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MCM"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource EditQMCM}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QSAPreview">
        <local:QuestionPanel Points="{Binding QuestionSH.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                                    Text="{Binding QuestionSH.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsMath="{Binding QuestionSH.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"/>

                <TextBlock Text="Short answer"/>
            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QSA">
        <local:QuestionPanel Points="{Binding QuestionSH.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                                    Text="{Binding QuestionSH.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsMath="{Binding QuestionSH.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="0,0,0,10"/>
                <local:TemplateTextBox Text="{Binding QuestionSH.Answer.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                         IsEnabled="{TemplateBinding EnableSolving}"/>
                
            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QMCPreview">
        <local:QuestionPanel Points="{Binding QuestionMC.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                                    Text="{Binding QuestionMC.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsMath="{Binding QuestionMC.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="0 0 0 15"/>

                <TextBlock Text="Possible answers"/>

                <ItemsControl ItemsSource="{Binding QuestionMC.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:LatexLabel Text="{Binding Text}"
                                          IsMath="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=DataContext.TextIsMath}"
                                          Margin="3"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QMC">
        <local:QuestionPanel Points="{Binding QuestionMC.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                                    Text="{Binding QuestionMC.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsMath="{Binding QuestionMC.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="0 0 0 15"/>

                <TextBlock Text="Possible answers"/>

                <ItemsControl ItemsSource="{Binding QuestionMC.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}"
                              Margin="2">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <RadioButton IsChecked="{Binding IsCorrect}">
                                <RadioButton.Style>
                                    <Style TargetType="RadioButton">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding EnableSolving, RelativeSource={RelativeSource AncestorType={x:Type local:QuestionViewPanel}}}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                                <Setter Property="GroupName" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UniqueId}"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </Style>
                                </RadioButton.Style>
                                <local:LatexLabel Text="{Binding Text}"
                                                  IsMath="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.TextIsMath}"/>
                            </RadioButton>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QMCMPreview">
        <local:QuestionPanel Points="{Binding QuestionMCM.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                    Text="{Binding QuestionMCM.Text, RelativeSource={RelativeSource TemplatedParent}}"
                    IsMath="{Binding QuestionMCM.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                    Margin="0 0 0 15"/>

                <TextBlock Text="Possible answers"/>

                <ItemsControl ItemsSource="{Binding QuestionMCM.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:LatexLabel Text="{Binding Text}"
                                              IsMath="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=DataContext.TextIsMath}"
                                              Margin="3"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QMCM">
        <local:QuestionPanel Points="{Binding QuestionMC.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                                    Text="{Binding QuestionMCM.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsMath="{Binding QuestionMCM.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="0 0 0 15"/>

                <TextBlock Text="Possible answers"/>

                <ItemsControl ItemsSource="{Binding QuestionMCM.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}"
                              Margin="2">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsCorrect}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding EnableSolving, RelativeSource={RelativeSource AncestorType=local:QuestionViewPanel}}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </Style>
                                </CheckBox.Style>
                                <local:LatexLabel Text="{Binding Text}"
                                                  IsMath="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.TextIsMath}"/>
                            </CheckBox>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <Style TargetType="{x:Type local:QuestionViewPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}">
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="SH"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QSA}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="SH"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QSAPreview}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MC"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QMC}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MC"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QMCPreview}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MCM"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QMCM}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MCM"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QMCMPreview}"/>
            </MultiDataTrigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type local:TemplateTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TemplateTextBox}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <TextBox Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock IsHitTestVisible="False" Text="{TemplateBinding Placeholder}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="DarkGray">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
