<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:TestNET.Shared.CustomControls"
    xmlns:model="clr-namespace:TestNET.Shared.Model">


    <Style TargetType="{x:Type local:QuestionPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:QuestionPanel}">
                    <ControlTemplate.Resources>
                        <Style x:Key="QuestionBorder" TargetType="Border">
                            <Setter Property="BorderBrush" Value="#FF80c0ff"/>
                            <Setter Property="BorderThickness" Value="2"/>
                            <Setter Property="CornerRadius" Value="4"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        </Style>

                        <Style x:Key="QuestionIndex" TargetType="Label">
                            <Setter Property="VerticalAlignment" Value="Stretch"/>
                            <Setter Property="HorizontalAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Background" Value="#FF80c0ff"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter Property="Padding" Value="0"/>
                        </Style>

                        <Style x:Key="QuestionBody" TargetType="StackPanel">
                            <Setter Property="Margin" Value="15"/>
                        </Style>

                        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
                    </ControlTemplate.Resources>
                    <Border Style="{StaticResource QuestionBorder}">
                        <StackPanel>
                            <Grid Background="#FFbfdFff">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>

                                <Label Content="{TemplateBinding QuestionIndex}"
                                       Style="{StaticResource QuestionIndex}"
                                       Grid.Column="0"/>
                                
                                
                                <local:DropdownMenu 
                                    Content="{Binding DropdownContent, RelativeSource={RelativeSource TemplatedParent}}"
                                    Grid.Column="2"
                                    MaxWidth="20"
                                    Visibility="{Binding ShowDropdown, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVis}}"/>

                                <Label Grid.Column="2"
                                       FontSize="16"
                                       Visibility="{Binding ShowPoints, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVis}}">
                                    <Label.Content>
                                        <WrapPanel>
                                            <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type StackPanel}}, Path=DataContext.Points}"/>
                                            <TextBlock Text=" Pts."/>
                                        </WrapPanel>
                                    </Label.Content>
                                </Label>
                            </Grid>
                            <ContentControl Content="{TemplateBinding Content}"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LatexLabel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LatexLabel}">
                    <ContentControl Content="{TemplateBinding Content}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DropdownMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DropdownMenu}">
                    <Grid>
                        <Grid.Resources>

                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Padding" Value="20 10"/>
                            </Style>
                        </Grid.Resources>
                        <CheckBox x:Name="PART_Toggle" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                            <CheckBox.Template>
                                <ControlTemplate TargetType="CheckBox">
                                    <Grid Background="Transparent">
                                        <Viewbox>
                                            <Path
                                                Data="M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z"
                                                Fill="Black"
                                                Stretch="Fill" />
                                        </Viewbox>
                                    </Grid>
                                </ControlTemplate>
                            </CheckBox.Template>
                        </CheckBox>

                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            IsOpen="{TemplateBinding IsOpen}"
                            Placement="Bottom"
                            PlacementTarget="{Binding ElementName=PART_Toggle}"
                            StaysOpen="False">
                            <ContentControl Content="{TemplateBinding Content}"/>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type local:QuestionEditPanel}" x:Key="EditQSA">
        <local:QuestionPanel QuestionIndex="{TemplateBinding QuestionIndex}"
                             ShowDropdown="True">
            <local:QuestionPanel.DropdownContent>
                <Button Content="Delete" Command="{Binding DataContext.RemoveQuestionCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{TemplateBinding Question}" Background="White"/>
            </local:QuestionPanel.DropdownContent>

            <StackPanel Margin="15">
                <local:LatexTextBox IsMath="{Binding QuestionSH.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Text="{Binding QuestionSH.Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <local:LatexTextBox IsMath="{Binding QuestionSH.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Text="{Binding QuestionSH.Answer.Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                <WrapPanel>
                    <Label Content="Pts:"/>
                    <TextBox Text="{Binding QuestionSH.Points, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                             MinWidth="30"/>
                </WrapPanel>
                <CheckBox Content="Math" IsChecked="{Binding QuestionSH.TextIsMath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
            </StackPanel>
        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionEditPanel}" x:Key="EditQMC">
        <local:QuestionPanel QuestionIndex="{TemplateBinding QuestionIndex}"
                             ShowDropdown="True">
            <local:QuestionPanel.DropdownContent>
                <Button Content="Delete" Command="{Binding DataContext.RemoveQuestionCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{TemplateBinding Question}" Background="White"/>
            </local:QuestionPanel.DropdownContent>
            <StackPanel Margin="15">
                <local:LatexTextBox IsMath="{Binding QuestionMC.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Text="{Binding QuestionMC.Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                <ItemsControl ItemsSource="{Binding QuestionMC.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:Answer}">
                            <WrapPanel>
                                <RadioButton GroupName="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UniqueId}"
                                             IsChecked="{Binding IsCorrect, Mode=TwoWay}" />
                                <local:LatexTextBox Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    IsMath="{Binding QuestionMC.TextIsMath, RelativeSource={RelativeSource AncestorType=local:QuestionEditPanel}}"/>
                            </WrapPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Button Content="+"
                        Command="{Binding QuestionMC.AddPosAnsCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
                <WrapPanel>
                    <Label Content="Pts:"/>
                    <TextBox Text="{Binding QuestionMC.Points, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                             MinWidth="30"/>
                </WrapPanel>
                <CheckBox Content="Math" IsChecked="{Binding QuestionMC.TextIsMath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
            </StackPanel>
        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionEditPanel}" x:Key="EditQMCM">
        <local:QuestionPanel QuestionIndex="{TemplateBinding QuestionIndex}"
                             ShowDropdown="True">
            <local:QuestionPanel.DropdownContent>
                <Button Content="Delete" Command="{Binding DataContext.RemoveQuestionCommand, RelativeSource={RelativeSource AncestorType=ListView}}" CommandParameter="{TemplateBinding Question}" Background="White"/>
            </local:QuestionPanel.DropdownContent>
            <StackPanel Margin="15">
                <local:LatexTextBox IsMath="{Binding QuestionMCM.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Text="{Binding QuestionMCM.Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                <ItemsControl ItemsSource="{Binding QuestionMCM.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type model:Answer}">
                            <WrapPanel>
                                <CheckBox IsChecked="{Binding IsCorrect, Mode=TwoWay}" />
                                <local:LatexTextBox Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                    IsMath="{Binding QuestionMCM.TextIsMath, RelativeSource={RelativeSource AncestorType=local:QuestionEditPanel}}"/>
                            </WrapPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Button Content="+"
                        Command="{Binding QuestionMCM.AddPosAnsCommand, RelativeSource={RelativeSource TemplatedParent}}"/>
                <WrapPanel>
                    <Label Content="Pts:"/>
                    <TextBox Text="{Binding QuestionMCM.Points, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                             MinWidth="30"/>
                </WrapPanel>
                <CheckBox Content="Math" IsChecked="{Binding QuestionMCM.TextIsMath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
            </StackPanel>
        </local:QuestionPanel>
    </ControlTemplate>

    <Style TargetType="{x:Type local:QuestionEditPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:QuestionEditPanel}">
                    <local:QuestionViewPanel 
                        Question="{TemplateBinding Question}"
                        QuestionIndex="{TemplateBinding QuestionIndex}"
                        EnableSolving="False"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInEditMode, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="SH"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource EditQSA}"/>
            </MultiDataTrigger>


            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInEditMode, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MC"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource EditQMC}"/>
            </MultiDataTrigger>


            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsInEditMode, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MCM"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource EditQMCM}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QSAPreview">
        <local:QuestionPanel Points="{Binding QuestionSH.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                                    Text="{Binding QuestionSH.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsMath="{Binding QuestionSH.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"/>

                <TextBlock Text="Short answer"/>
            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QSA">
        <local:QuestionPanel Points="{Binding QuestionSH.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                                    Text="{Binding QuestionSH.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsMath="{Binding QuestionSH.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="0,0,0,10"/>
                <local:TemplateTextBox Text="{Binding QuestionSH.Answer.Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"
                         IsEnabled="{TemplateBinding EnableSolving}"/>
                
            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QMCPreview">
        <local:QuestionPanel Points="{Binding QuestionMC.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                                    Text="{Binding QuestionMC.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsMath="{Binding QuestionMC.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="0 0 0 15"/>

                <TextBlock Text="Possible answers"/>

                <ItemsControl ItemsSource="{Binding QuestionMC.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:LatexLabel Text="{Binding Text}"
                                          IsMath="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=DataContext.TextIsMath}"
                                          Margin="3"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QMC">
        <local:QuestionPanel Points="{Binding QuestionMC.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                                    Text="{Binding QuestionMC.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsMath="{Binding QuestionMC.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="0 0 0 15"/>

                <TextBlock Text="Possible answers"/>

                <ItemsControl ItemsSource="{Binding QuestionMC.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}"
                              Margin="2">
                    <!--
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    -->
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Margin" Value="5"/>
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <RadioButton IsChecked="{Binding IsCorrect}"
                                         VerticalContentAlignment="Center">
                                <RadioButton.Style>
                                    <Style TargetType="RadioButton">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding EnableSolving, RelativeSource={RelativeSource AncestorType={x:Type local:QuestionViewPanel}}}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                                <Setter Property="GroupName" Value="{Binding RelativeSource={RelativeSource AncestorType=ItemsControl}, Path=DataContext.UniqueId}"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </Style>
                                </RadioButton.Style>
                                <local:LatexLabel Text="{Binding Text}"
                                                  IsMath="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.TextIsMath}"/>
                            </RadioButton>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QMCMPreview">
        <local:QuestionPanel Points="{Binding QuestionMCM.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                    Text="{Binding QuestionMCM.Text, RelativeSource={RelativeSource TemplatedParent}}"
                    IsMath="{Binding QuestionMCM.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                    Margin="0 0 0 15"/>

                <TextBlock Text="Possible answers"/>

                <ItemsControl ItemsSource="{Binding QuestionMCM.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:LatexLabel Text="{Binding Text}"
                                              IsMath="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=DataContext.TextIsMath}"
                                              Margin="3"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}" x:Key="QMCM">
        <local:QuestionPanel Points="{Binding QuestionMC.Points, RelativeSource={RelativeSource TemplatedParent}}"
                             QuestionIndex="{TemplateBinding QuestionIndex}">

            <StackPanel Margin="15">

                <local:LatexLabel
                                    Text="{Binding QuestionMCM.Text, RelativeSource={RelativeSource TemplatedParent}}"
                                    IsMath="{Binding QuestionMCM.TextIsMath, RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="0 0 0 15"/>

                <TextBlock Text="Possible answers"/>

                <ItemsControl ItemsSource="{Binding QuestionMCM.PossibleAnswers, RelativeSource={RelativeSource TemplatedParent}}"
                              Margin="2">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsCorrect}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding EnableSolving, RelativeSource={RelativeSource AncestorType=local:QuestionViewPanel}}" Value="True">
                                                <Setter Property="IsEnabled" Value="True"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </Style>
                                </CheckBox.Style>
                                <local:LatexLabel Text="{Binding Text}"
                                                  IsMath="{Binding RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, Path=DataContext.TextIsMath}"/>
                            </CheckBox>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </StackPanel>

        </local:QuestionPanel>
    </ControlTemplate>

    <Style TargetType="{x:Type local:QuestionViewPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:QuestionViewPanel}">
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="SH"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QSA}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="SH"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QSAPreview}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MC"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QMC}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MC"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QMCPreview}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MCM"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QMCM}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Question.QType, RelativeSource={RelativeSource Self}}" Value="MCM"/>
                    <Condition Binding="{Binding ShowAnswers, RelativeSource={RelativeSource Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource QMCMPreview}"/>
            </MultiDataTrigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type local:TemplateTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TemplateTextBox}">
                    <Grid Margin="{TemplateBinding Margin}">
                        <TextBox Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock IsHitTestVisible="False" Text="{TemplateBinding Placeholder}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" Foreground="DarkGray">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MathKeyboardPopup}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MathKeyboardPopup}">
                    <Grid>
                        <Grid.Resources>

                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Padding" Value="20 10"/>
                            </Style>
                        </Grid.Resources>
                        <CheckBox x:Name="PART_Toggle" IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                            <CheckBox.Template>
                                <ControlTemplate TargetType="CheckBox">
                                    <Grid Background="Transparent">
                                        <Viewbox Stretch="Uniform" MaxHeight="20">
                                            <Path
                                                Data="M27.61,34.37l-4.07,4.6l0.4,1.74h10.48c-2.14,12.38-3.74,23.54-6.81,40.74c-3.67,21.94-5.78,27.33-7.03,29.3 c-1.1,1.95-2.68,2.96-4.82,2.96c-2.35,0-6.6-1.86-8.88-3.97c-0.82-0.56-1.79-0.42-2.82,0.26C2,111.74,0,114.42,0,116.82 c-0.12,3.24,4.21,6.06,8.34,6.06c3.64,0,9-2.28,14.64-7.64c7.71-7.31,13.48-17.34,18.3-39.02c3.1-13.84,4.56-22.84,6.74-35.5 l13.02-1.18l2.82-5.17H49.2C52.99,10.53,55.95,7,59.59,7c2.42,0,5.24,1.86,8.48,5.52c0.96,1.32,2.4,1.18,3.5,0.28 c1.85-1.1,4.13-3.92,4.28-6.48C75.96,3.5,72.6,0,66.82,0C61.58,0,53.55,3.5,46.8,10.38c-5.92,6.27-9.02,14.1-11.16,23.99H27.61 L27.61,34.37z M69.27,50.33c4.04-5.38,6.46-7.17,7.71-7.17c1.29,0,2.32,1.27,4.53,8.41l3.78,12.19 c-7.31,11.18-12.66,17.41-15.91,17.41c-1.08,0-2.17-0.34-2.94-1.1c-0.76-0.76-1.6-1.39-2.42-1.39c-2.68,0-6,3.25-6.06,7.28 c-0.06,4.11,2.82,7.05,6.6,7.05c6.49,0,11.98-6.37,22.58-23.26l3.1,10.45c2.66,8.98,5.78,12.81,9.68,12.81 c4.82,0,11.3-4.11,18.37-15.22l-2.96-3.38c-4.25,5.12-7.07,7.52-8.74,7.52c-1.86,0-3.49-2.84-5.64-9.82l-4.53-14.73 c2.68-3.95,5.32-7.27,7.64-9.92c2.76-3.15,4.89-4.49,6.34-4.49c1.22,0,2.28,0.52,2.94,1.25c0.87,0.96,1.39,1.41,2.42,1.41 c2.33,0,5.93-2.96,6.06-6.88c0.12-3.64-2.14-6.74-6.06-6.74c-5.92,0-11.14,5.1-21.19,20.04l-2.07-6.41 c-2.9-9-4.82-13.63-8.86-13.63c-4.7,0-11.16,5.78-17.48,14.94L69.27,50.33L69.27,50.33z"
                                                Fill="Black"
                                                Stretch="Fill" />
                                        </Viewbox>
                                    </Grid>
                                </ControlTemplate>
                            </CheckBox.Template>
                        </CheckBox>

                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="True"
                            IsOpen="{TemplateBinding IsOpen}"
                            Placement="Center"
                            PlacementTarget="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                            StaysOpen="True">
                            
                            <Border BorderThickness="1" BorderBrush="DarkGray">
                                
                            <Grid Background="White">
                                <StackPanel MaxWidth="800">
                                    <local:LatexLabel Margin="20"
                                                      IsMath="True"
                                                      Text="{Binding TempView, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <TextBlock Margin="20"
                                                      Text="{Binding TempText, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <WrapPanel Margin="20">
                                            <TabControl>
                                                <TabItem>
                                                    <TabItem.Header>
                                                        <local:LatexLabel Text="+-\\\times \div" IsMath="True"/>
                                                    </TabItem.Header>
                                                    <WrapPanel>

                                                        <Button Name="SQRT_BTN">
                                                            <local:LatexLabel Text="\sqrt{\square}" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="Cust_SQRT_BTN">
                                                            <local:LatexLabel Text="\sqrt[\square]{\square}" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="FRAC_BTN">
                                                            <local:LatexLabel Text="\frac{\square}{\square}" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="SBR_BTN">
                                                            <local:LatexLabel Text="\left( \square \right)" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="PIPE_BTN">
                                                            <local:LatexLabel Text="\left| \square \right|" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="Pi_BTN">
                                                            <local:LatexLabel Text="\pi" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="POWER_BTN">
                                                            <local:LatexLabel Text="a^{\square}" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="TEXT_BTN" Content="Text"/>
                                                        <Button Name="IN_BTN">
                                                            <local:LatexLabel Text="\in" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="DEG_BTN">
                                                            <local:LatexLabel Text="\square^{\circ}" IsMath="True"/>
                                                        </Button>
                                                    </WrapPanel>
                                                </TabItem>
                                            </TabControl>
                                        </WrapPanel>
                                    <Button Content="Save" Name="SAVE_BTN"/>
                                    <Button Content="Cancel"/>
                                </StackPanel>
                            </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:LatexTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LatexTextBox}">
                    <local:TemplateTextBox Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMath, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:LatexTextBox}">
                            <StackPanel>
                                <WrapPanel>
                                    
                                    <!--
                                    <local:LatexLabel Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" IsMath="True"/>
                                    <local:MathKeyboardPopup Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                    -->

                                    <local:MathKeyboardPanel Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                </WrapPanel>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:MathKeyboardPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MathKeyboardPanel}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="DarkGray"
                            BorderThickness="1">
                        <Grid Background="Transparent">
                            <CheckBox IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                <CheckBox.Template>
                                    <ControlTemplate TargetType="CheckBox">
                                        <Grid Background="Transparent">
                                            <local:LatexLabel Text="{Binding Text, RelativeSource={RelativeSource AncestorType=local:MathKeyboardPanel}, UpdateSourceTrigger=PropertyChanged}" 
                                                              IsMath="True"
                                                              Margin="5 3 5 5"/>
                                        </Grid>
                                    </ControlTemplate>
                                </CheckBox.Template>
                            </CheckBox>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsOpen" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:MathKeyboardPanel}">
                            <Border BorderBrush="DarkGray"
                                    BorderThickness="1">
                                <Grid Name="PART_GRID" Background="Transparent">
                                    <StackPanel>
                                        <local:LatexLabel Margin="20"
                                                      IsMath="True"
                                                      Text="{Binding TempView, RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <WrapPanel Margin="20">
                                            <WrapPanel.Resources>

                                                <Style TargetType="Button">
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="MinWidth" Value="50"/>
                                                </Style>
                                            </WrapPanel.Resources>
                                            <TabControl>
                                                <TabItem>
                                                    <TabItem.Header>
                                                        <local:LatexLabel Text="+-\\\times \div" IsMath="True"/>
                                                    </TabItem.Header>
                                                    <WrapPanel>

                                                        <Button Name="SQRT_BTN">
                                                            <local:LatexLabel Text="\sqrt{\square}" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="NTHRT_BTN">
                                                            <local:LatexLabel Text="\sqrt[\square]{\square}" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="FRAC_BTN">
                                                            <local:LatexLabel Text="\frac{\square}{\square}" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="SBR_BTN">
                                                            <local:LatexLabel Text="\left( \square \right)" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="PIPE_BTN">
                                                            <local:LatexLabel Text="\left| \square \right|" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="Pi_BTN">
                                                            <local:LatexLabel Text="\pi" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="POWER_BTN">
                                                            <local:LatexLabel Text="a^{\square}" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="TEXT_BTN" Content="Text"/>
                                                        <Button Name="NEWLINE_BTN" Content="Newline"/>
                                                        <Button Name="IN_BTN">
                                                            <local:LatexLabel Text="\in" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="CUP_BTN">
                                                            <local:LatexLabel Text="\cup" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="CAP_BTN">
                                                            <local:LatexLabel Text="\cap" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="DEG_BTN">
                                                            <local:LatexLabel Text="\square^{\circ}" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="INF_BTN">
                                                            <local:LatexLabel Text="\infty" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="SIN_BTN">
                                                            <local:LatexLabel Text="\sin" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="COS_BTN">
                                                            <local:LatexLabel Text="\cos" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="TG_BTN">
                                                            <local:LatexLabel Text="\tg" IsMath="True"/>
                                                        </Button>
                                                        <Button Name="COTG_BTN">
                                                            <local:LatexLabel Text="\cot" IsMath="True"/>
                                                        </Button>
                                                    </WrapPanel>
                                                </TabItem>
                                            </TabControl>
                                        </WrapPanel>
                                    
                                        
                                        <!--
                                        <Expander Header="Latex">
                                        <TextBox Text="{Binding TBText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             IsEnabled="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=Expander}}"/>
                                    </Expander>
                                    -->
                                        <Button Content="Save" Name="SAVE_BTN"/>
                                        <Button Content="Cancel" Name="CANCEL_BTN"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
